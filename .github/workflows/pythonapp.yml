name: Python application
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      postgres:
        image: postgis/postgis
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Cache virtualenv
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
          ~/.local/share/pyppeteer
        key: ${{ runner.os }}-${{ hashFiles('Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pipenv
        pipenv sync

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install binutils libproj-dev gdal-bin

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: JavaScript
      run: |
        npm install
        make lint
        make build-static

    - name: Test
      env:
        SECRET_KEY: wormprovision
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
        DB_NAME: postgres
      run: |
       pipenv run coverage run ./manage.py collectstatic --noinput
       pipenv run coverage run --append -m pytest
       pipenv run coverage run --append ./manage.py test
       pipenv run coverage html

    - name: Upload coverage
      uses: idlefingers/do-space-sync-action@0.1.0
      with:
        args: --acl public-read
      env:
        SOURCE_DIR: htmlcov
        SPACE_NAME: ${{ secrets.SPACE_NAME }}
        SPACE_REGION: ams3
        SPACE_ACCESS_KEY_ID: ${{ secrets.SPACE_ACCESS_KEY_ID }}
        SPACE_SECRET_ACCESS_KEY: ${{ secrets.SPACE_SECRET_ACCESS_KEY }}
